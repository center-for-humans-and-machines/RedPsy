"""Calculate Self-BLEU score.

Source:
https://www.digitalocean.com/community/tutorials/automated-metrics-for-evaluating-generated-text#self-bleu
"""

import copy
from typing import List

import numpy as np
from nltk import word_tokenize
from nltk.translate.bleu_score import SmoothingFunction, sentence_bleu


def calculate_bleu(candidate, reference) -> np.float64:
    """
    Args:
        candidate: generated sentence
        reference: reference sentence

    Returns:
        BLEU score for the generated sentence against the reference sentence
    """
    reference = word_tokenize(reference)
    candidate = word_tokenize(candidate)
    score = sentence_bleu(
        reference, candidate, smoothing_function=SmoothingFunction().method1
    )
    return score


def get_bleu_score(sentence, remaining_sentences) -> List[np.float64]:
    """
    Args:
        sentence: generated sentence
        remaining_sentences: list of sentences generated by NLG system

    Returns:
        List of BLEU scores for the generated sentence against the remaining sentences
    """
    lst = []
    for i in remaining_sentences:
        bleu = sentence_bleu(
            sentence, i, smoothing_function=SmoothingFunction().method1
        )
        lst.append(bleu)
    return lst


def calculate_self_bleu(sentences) -> np.float64:
    """
    Calculate Self-BLEU score for a list of sentences.

    Self-BLEU is a metric that measures the diversity of generated text by
    comparing each sentence to the rest of the sentences in the set.

    Args:
        sentences: list of sentences generated by NLG system

    Returns:
        Self-BLEU score for the generated sentences
    """
    bleu_scores = []

    for i in sentences:
        sentences_copy = copy.deepcopy(sentences)
        _ = sentences_copy.remove(i)
        # print(sentences_copy)
        bleu = get_bleu_score(i, sentences_copy)
        bleu_scores.append(bleu)

    return np.mean(bleu_scores)
